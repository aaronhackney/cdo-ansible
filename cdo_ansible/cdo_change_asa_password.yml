---
- name: Change ASA password in CDO (SDC)
  become: false
  hosts: all
  connection: local

  tasks:
    ###########################################################################
    # Load devices details and API keys from inventory
    - name: Get this devices settings from host varaibles
      ansible.builtin.set_fact:
        # api_key: from group_vars
        # cdo_region: from group_vars
        device_name: "{{ inventory_hostname }}"
        lar_name: "{{ hostvars[inventory_hostname].lar_name}}"
        username: "{{ hostvars[inventory_hostname].username }}"
        password: "{{ hostvars[inventory_hostname].password }}"

    - name: Get list of SDC/CDG/SEC containers
      vars:
        relative_path: /aegis/rest/v1/services/targets/proxies
        cdo_headers:
          Authorization: "Bearer {{api_key}}"
        search_lar_name: "{{lar_name}}"
        proxies: "{{get_result}}"
      ansible.builtin.import_role:
        name: cdo_get

    - name: extract specific SDC/CDG/SEC
      vars:
        lar_query: "json[?name==`{{ search_lar_name }}`]"
        connector_list: "{{ proxies | community.general.json_query(lar_query) }}"
      ansible.builtin.set_fact:
        connector: "{{connector_list[0] if connector_list | length > 0}}"
        
    - name: Fail if SDC/CDG/SEC was not found
      ansible.builtin.fail: msg="CDG/SDC {{lar_name}} was not found"
      when: "connector|length < 1"

    - name: get the ASA uid
      vars:
        asa_query:
          "?limit=50&offset=0&q=((model:false)+AND+(name:{{device_name}}))+AND+(NOT+deviceType:FMCE)\
          &resolve=%5Btargets/devices.%7Bname,ignoreCertificate,deviceType,configState,\
          configProcessingState,model,ipv4,modelNumber,serial,chassisSerial,connectivityState,\
          connectivityError,certificate,mostRecentCertificate,tags,tagKeys,type,associatedDeviceUid,\
          oobDetectionState,enableOobDetection,deviceActivity,softwareVersion,lastErrorMap,\
          stateMachineDetails,larUid,larType,metadata%7D%5D&sort=name:asc"
        relative_path: "/aegis/rest/v1/services/targets/devices{{asa_query}}"
        cdo_headers:
          Authorization: "Bearer {{api_key}}"
      ansible.builtin.import_role:
        name: cdo_get
    
    - name: set ASA uid
      ansible.builtin.set_fact:
        asa_uid: "{{get_result.json[0].uid}}"

    - name: get the ASA specific device uid
      vars:
        relative_path: "/aegis/rest/v1/device/{{asa_uid}}/specific-device"
        cdo_headers:
          Authorization: "Bearer {{api_key}}"
      ansible.builtin.import_role:
        name: cdo_get
        
    - name: set the specific uid of the ASA
      ansible.builtin.set_fact:
        asa_specific_uid: "{{get_result.json.uid}}"
        
    - name: debug specific uid of the ASA
      debug: msg="{{asa_specific_uid}}"
      
    - name: encrypt new credentials for the ASA using LAR public key
      ansible.builtin.import_role:
        name: cdo_encrypt_credentials
        
    - name: PUT the new ASA credentials on the SDC
      vars:
        cdo_headers:
          Authorization: "Bearer {{api_key}}"
        relative_path: "/aegis/rest/v1/services/asa/configs/{{asa_specific_uid}}"
        payload:
          state: WAIT_FOR_USER_TO_UPDATE_CREDS
          stateMachineContext:
            credentials: "{{ credentials | to_json}}"
      ansible.builtin.import_role:
        name: cdo_put
